import type { Metadata } from 'next'
import { Rubik } from 'next/font/google'
import './globals.css'
import Footer from '@/components/shared-components/Footer'
import { NextIntlClientProvider } from 'next-intl'
import { getMessages } from 'next-intl/server'
import { notFound } from 'next/navigation'
import { Language, routing } from '@/i18n/routing'
import HeaderWrap from '@/components/header/headerWrap'

export const metadata: Metadata = {
  title: 'Momtan Next App',
  description: 'Generated by create next app',
}

// If loading a variable font, you don't need to specify the font weight
const rubik = Rubik({
  subsets: ['latin', 'arabic'],
  display: 'swap',
  weight: ['400', '500', '600', '700'],
})

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode
  params: Promise<{ locale: Language }>
}) {
  // Ensure that the incoming `locale` is valid
  const resolvedParams = await params
  const { locale } = resolvedParams
  // setRequestLocale(locale)

  if (!routing.locales.includes(locale)) {
    notFound()
  }
  // Providing all messages to the client
  // side is the easiest way to get started
  const messages = await getMessages()
  return (
    <html lang="ar" dir={`${locale === 'ar' ? 'rtl' : 'ltr'}`}>
      {/* <body
        className={`${rubik.className} antialiased inset-0 relative bg-[linear-gradient(to_right,#8080800a_1px,transparent_1px),linear-gradient(to_bottom,#8080800a_1px,transparent_1px)] bg-[size:14px_24px]`}
      > */}
      <body className={`${rubik.className}`}>
        {/* <div
          className="absolute left-0 right-0 top-0 -z-10 m-auto h-full w-full 
        rounded-full bg-fuchsia-200 opacity-30 blur-[100px]"
        ></div> */}
        <NextIntlClientProvider locale={locale} messages={messages}>
          <HeaderWrap locale={locale} />
          {children}
          <Footer locale={locale} />
        </NextIntlClientProvider>
      </body>
    </html>
  )
}
